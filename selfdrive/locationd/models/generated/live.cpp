#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1654711282601658745) {
   out_1654711282601658745[0] = 0;
   out_1654711282601658745[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1654711282601658745[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1654711282601658745[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1654711282601658745[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1654711282601658745[5] = -sin(in_vec[1]);
   out_1654711282601658745[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1654711282601658745[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1654711282601658745[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1654711282601658745[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1654711282601658745[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1654711282601658745[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1654711282601658745[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1654711282601658745[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1654711282601658745[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1654711282601658745[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1654711282601658745[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1654711282601658745[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5734741546333750642) {
   out_5734741546333750642[0] = delta_x[0] + nom_x[0];
   out_5734741546333750642[1] = delta_x[1] + nom_x[1];
   out_5734741546333750642[2] = delta_x[2] + nom_x[2];
   out_5734741546333750642[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5734741546333750642[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5734741546333750642[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5734741546333750642[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5734741546333750642[7] = delta_x[6] + nom_x[7];
   out_5734741546333750642[8] = delta_x[7] + nom_x[8];
   out_5734741546333750642[9] = delta_x[8] + nom_x[9];
   out_5734741546333750642[10] = delta_x[9] + nom_x[10];
   out_5734741546333750642[11] = delta_x[10] + nom_x[11];
   out_5734741546333750642[12] = delta_x[11] + nom_x[12];
   out_5734741546333750642[13] = delta_x[12] + nom_x[13];
   out_5734741546333750642[14] = delta_x[13] + nom_x[14];
   out_5734741546333750642[15] = delta_x[14] + nom_x[15];
   out_5734741546333750642[16] = delta_x[15] + nom_x[16];
   out_5734741546333750642[17] = delta_x[16] + nom_x[17];
   out_5734741546333750642[18] = delta_x[17] + nom_x[18];
   out_5734741546333750642[19] = delta_x[18] + nom_x[19];
   out_5734741546333750642[20] = delta_x[19] + nom_x[20];
   out_5734741546333750642[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_997272261207104900) {
   out_997272261207104900[0] = -nom_x[0] + true_x[0];
   out_997272261207104900[1] = -nom_x[1] + true_x[1];
   out_997272261207104900[2] = -nom_x[2] + true_x[2];
   out_997272261207104900[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_997272261207104900[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_997272261207104900[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_997272261207104900[6] = -nom_x[7] + true_x[7];
   out_997272261207104900[7] = -nom_x[8] + true_x[8];
   out_997272261207104900[8] = -nom_x[9] + true_x[9];
   out_997272261207104900[9] = -nom_x[10] + true_x[10];
   out_997272261207104900[10] = -nom_x[11] + true_x[11];
   out_997272261207104900[11] = -nom_x[12] + true_x[12];
   out_997272261207104900[12] = -nom_x[13] + true_x[13];
   out_997272261207104900[13] = -nom_x[14] + true_x[14];
   out_997272261207104900[14] = -nom_x[15] + true_x[15];
   out_997272261207104900[15] = -nom_x[16] + true_x[16];
   out_997272261207104900[16] = -nom_x[17] + true_x[17];
   out_997272261207104900[17] = -nom_x[18] + true_x[18];
   out_997272261207104900[18] = -nom_x[19] + true_x[19];
   out_997272261207104900[19] = -nom_x[20] + true_x[20];
   out_997272261207104900[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6112760305448342788) {
   out_6112760305448342788[0] = 1.0;
   out_6112760305448342788[1] = 0;
   out_6112760305448342788[2] = 0;
   out_6112760305448342788[3] = 0;
   out_6112760305448342788[4] = 0;
   out_6112760305448342788[5] = 0;
   out_6112760305448342788[6] = 0;
   out_6112760305448342788[7] = 0;
   out_6112760305448342788[8] = 0;
   out_6112760305448342788[9] = 0;
   out_6112760305448342788[10] = 0;
   out_6112760305448342788[11] = 0;
   out_6112760305448342788[12] = 0;
   out_6112760305448342788[13] = 0;
   out_6112760305448342788[14] = 0;
   out_6112760305448342788[15] = 0;
   out_6112760305448342788[16] = 0;
   out_6112760305448342788[17] = 0;
   out_6112760305448342788[18] = 0;
   out_6112760305448342788[19] = 0;
   out_6112760305448342788[20] = 0;
   out_6112760305448342788[21] = 0;
   out_6112760305448342788[22] = 1.0;
   out_6112760305448342788[23] = 0;
   out_6112760305448342788[24] = 0;
   out_6112760305448342788[25] = 0;
   out_6112760305448342788[26] = 0;
   out_6112760305448342788[27] = 0;
   out_6112760305448342788[28] = 0;
   out_6112760305448342788[29] = 0;
   out_6112760305448342788[30] = 0;
   out_6112760305448342788[31] = 0;
   out_6112760305448342788[32] = 0;
   out_6112760305448342788[33] = 0;
   out_6112760305448342788[34] = 0;
   out_6112760305448342788[35] = 0;
   out_6112760305448342788[36] = 0;
   out_6112760305448342788[37] = 0;
   out_6112760305448342788[38] = 0;
   out_6112760305448342788[39] = 0;
   out_6112760305448342788[40] = 0;
   out_6112760305448342788[41] = 0;
   out_6112760305448342788[42] = 0;
   out_6112760305448342788[43] = 0;
   out_6112760305448342788[44] = 1.0;
   out_6112760305448342788[45] = 0;
   out_6112760305448342788[46] = 0;
   out_6112760305448342788[47] = 0;
   out_6112760305448342788[48] = 0;
   out_6112760305448342788[49] = 0;
   out_6112760305448342788[50] = 0;
   out_6112760305448342788[51] = 0;
   out_6112760305448342788[52] = 0;
   out_6112760305448342788[53] = 0;
   out_6112760305448342788[54] = 0;
   out_6112760305448342788[55] = 0;
   out_6112760305448342788[56] = 0;
   out_6112760305448342788[57] = 0;
   out_6112760305448342788[58] = 0;
   out_6112760305448342788[59] = 0;
   out_6112760305448342788[60] = 0;
   out_6112760305448342788[61] = 0;
   out_6112760305448342788[62] = 0;
   out_6112760305448342788[63] = 0;
   out_6112760305448342788[64] = 0;
   out_6112760305448342788[65] = 0;
   out_6112760305448342788[66] = -0.5*state[4];
   out_6112760305448342788[67] = -0.5*state[5];
   out_6112760305448342788[68] = -0.5*state[6];
   out_6112760305448342788[69] = 0;
   out_6112760305448342788[70] = 0;
   out_6112760305448342788[71] = 0;
   out_6112760305448342788[72] = 0;
   out_6112760305448342788[73] = 0;
   out_6112760305448342788[74] = 0;
   out_6112760305448342788[75] = 0;
   out_6112760305448342788[76] = 0;
   out_6112760305448342788[77] = 0;
   out_6112760305448342788[78] = 0;
   out_6112760305448342788[79] = 0;
   out_6112760305448342788[80] = 0;
   out_6112760305448342788[81] = 0;
   out_6112760305448342788[82] = 0;
   out_6112760305448342788[83] = 0;
   out_6112760305448342788[84] = 0;
   out_6112760305448342788[85] = 0;
   out_6112760305448342788[86] = 0;
   out_6112760305448342788[87] = 0.5*state[3];
   out_6112760305448342788[88] = 0.5*state[6];
   out_6112760305448342788[89] = -0.5*state[5];
   out_6112760305448342788[90] = 0;
   out_6112760305448342788[91] = 0;
   out_6112760305448342788[92] = 0;
   out_6112760305448342788[93] = 0;
   out_6112760305448342788[94] = 0;
   out_6112760305448342788[95] = 0;
   out_6112760305448342788[96] = 0;
   out_6112760305448342788[97] = 0;
   out_6112760305448342788[98] = 0;
   out_6112760305448342788[99] = 0;
   out_6112760305448342788[100] = 0;
   out_6112760305448342788[101] = 0;
   out_6112760305448342788[102] = 0;
   out_6112760305448342788[103] = 0;
   out_6112760305448342788[104] = 0;
   out_6112760305448342788[105] = 0;
   out_6112760305448342788[106] = 0;
   out_6112760305448342788[107] = 0;
   out_6112760305448342788[108] = -0.5*state[6];
   out_6112760305448342788[109] = 0.5*state[3];
   out_6112760305448342788[110] = 0.5*state[4];
   out_6112760305448342788[111] = 0;
   out_6112760305448342788[112] = 0;
   out_6112760305448342788[113] = 0;
   out_6112760305448342788[114] = 0;
   out_6112760305448342788[115] = 0;
   out_6112760305448342788[116] = 0;
   out_6112760305448342788[117] = 0;
   out_6112760305448342788[118] = 0;
   out_6112760305448342788[119] = 0;
   out_6112760305448342788[120] = 0;
   out_6112760305448342788[121] = 0;
   out_6112760305448342788[122] = 0;
   out_6112760305448342788[123] = 0;
   out_6112760305448342788[124] = 0;
   out_6112760305448342788[125] = 0;
   out_6112760305448342788[126] = 0;
   out_6112760305448342788[127] = 0;
   out_6112760305448342788[128] = 0;
   out_6112760305448342788[129] = 0.5*state[5];
   out_6112760305448342788[130] = -0.5*state[4];
   out_6112760305448342788[131] = 0.5*state[3];
   out_6112760305448342788[132] = 0;
   out_6112760305448342788[133] = 0;
   out_6112760305448342788[134] = 0;
   out_6112760305448342788[135] = 0;
   out_6112760305448342788[136] = 0;
   out_6112760305448342788[137] = 0;
   out_6112760305448342788[138] = 0;
   out_6112760305448342788[139] = 0;
   out_6112760305448342788[140] = 0;
   out_6112760305448342788[141] = 0;
   out_6112760305448342788[142] = 0;
   out_6112760305448342788[143] = 0;
   out_6112760305448342788[144] = 0;
   out_6112760305448342788[145] = 0;
   out_6112760305448342788[146] = 0;
   out_6112760305448342788[147] = 0;
   out_6112760305448342788[148] = 0;
   out_6112760305448342788[149] = 0;
   out_6112760305448342788[150] = 0;
   out_6112760305448342788[151] = 0;
   out_6112760305448342788[152] = 0;
   out_6112760305448342788[153] = 1.0;
   out_6112760305448342788[154] = 0;
   out_6112760305448342788[155] = 0;
   out_6112760305448342788[156] = 0;
   out_6112760305448342788[157] = 0;
   out_6112760305448342788[158] = 0;
   out_6112760305448342788[159] = 0;
   out_6112760305448342788[160] = 0;
   out_6112760305448342788[161] = 0;
   out_6112760305448342788[162] = 0;
   out_6112760305448342788[163] = 0;
   out_6112760305448342788[164] = 0;
   out_6112760305448342788[165] = 0;
   out_6112760305448342788[166] = 0;
   out_6112760305448342788[167] = 0;
   out_6112760305448342788[168] = 0;
   out_6112760305448342788[169] = 0;
   out_6112760305448342788[170] = 0;
   out_6112760305448342788[171] = 0;
   out_6112760305448342788[172] = 0;
   out_6112760305448342788[173] = 0;
   out_6112760305448342788[174] = 0;
   out_6112760305448342788[175] = 1.0;
   out_6112760305448342788[176] = 0;
   out_6112760305448342788[177] = 0;
   out_6112760305448342788[178] = 0;
   out_6112760305448342788[179] = 0;
   out_6112760305448342788[180] = 0;
   out_6112760305448342788[181] = 0;
   out_6112760305448342788[182] = 0;
   out_6112760305448342788[183] = 0;
   out_6112760305448342788[184] = 0;
   out_6112760305448342788[185] = 0;
   out_6112760305448342788[186] = 0;
   out_6112760305448342788[187] = 0;
   out_6112760305448342788[188] = 0;
   out_6112760305448342788[189] = 0;
   out_6112760305448342788[190] = 0;
   out_6112760305448342788[191] = 0;
   out_6112760305448342788[192] = 0;
   out_6112760305448342788[193] = 0;
   out_6112760305448342788[194] = 0;
   out_6112760305448342788[195] = 0;
   out_6112760305448342788[196] = 0;
   out_6112760305448342788[197] = 1.0;
   out_6112760305448342788[198] = 0;
   out_6112760305448342788[199] = 0;
   out_6112760305448342788[200] = 0;
   out_6112760305448342788[201] = 0;
   out_6112760305448342788[202] = 0;
   out_6112760305448342788[203] = 0;
   out_6112760305448342788[204] = 0;
   out_6112760305448342788[205] = 0;
   out_6112760305448342788[206] = 0;
   out_6112760305448342788[207] = 0;
   out_6112760305448342788[208] = 0;
   out_6112760305448342788[209] = 0;
   out_6112760305448342788[210] = 0;
   out_6112760305448342788[211] = 0;
   out_6112760305448342788[212] = 0;
   out_6112760305448342788[213] = 0;
   out_6112760305448342788[214] = 0;
   out_6112760305448342788[215] = 0;
   out_6112760305448342788[216] = 0;
   out_6112760305448342788[217] = 0;
   out_6112760305448342788[218] = 0;
   out_6112760305448342788[219] = 1.0;
   out_6112760305448342788[220] = 0;
   out_6112760305448342788[221] = 0;
   out_6112760305448342788[222] = 0;
   out_6112760305448342788[223] = 0;
   out_6112760305448342788[224] = 0;
   out_6112760305448342788[225] = 0;
   out_6112760305448342788[226] = 0;
   out_6112760305448342788[227] = 0;
   out_6112760305448342788[228] = 0;
   out_6112760305448342788[229] = 0;
   out_6112760305448342788[230] = 0;
   out_6112760305448342788[231] = 0;
   out_6112760305448342788[232] = 0;
   out_6112760305448342788[233] = 0;
   out_6112760305448342788[234] = 0;
   out_6112760305448342788[235] = 0;
   out_6112760305448342788[236] = 0;
   out_6112760305448342788[237] = 0;
   out_6112760305448342788[238] = 0;
   out_6112760305448342788[239] = 0;
   out_6112760305448342788[240] = 0;
   out_6112760305448342788[241] = 1.0;
   out_6112760305448342788[242] = 0;
   out_6112760305448342788[243] = 0;
   out_6112760305448342788[244] = 0;
   out_6112760305448342788[245] = 0;
   out_6112760305448342788[246] = 0;
   out_6112760305448342788[247] = 0;
   out_6112760305448342788[248] = 0;
   out_6112760305448342788[249] = 0;
   out_6112760305448342788[250] = 0;
   out_6112760305448342788[251] = 0;
   out_6112760305448342788[252] = 0;
   out_6112760305448342788[253] = 0;
   out_6112760305448342788[254] = 0;
   out_6112760305448342788[255] = 0;
   out_6112760305448342788[256] = 0;
   out_6112760305448342788[257] = 0;
   out_6112760305448342788[258] = 0;
   out_6112760305448342788[259] = 0;
   out_6112760305448342788[260] = 0;
   out_6112760305448342788[261] = 0;
   out_6112760305448342788[262] = 0;
   out_6112760305448342788[263] = 1.0;
   out_6112760305448342788[264] = 0;
   out_6112760305448342788[265] = 0;
   out_6112760305448342788[266] = 0;
   out_6112760305448342788[267] = 0;
   out_6112760305448342788[268] = 0;
   out_6112760305448342788[269] = 0;
   out_6112760305448342788[270] = 0;
   out_6112760305448342788[271] = 0;
   out_6112760305448342788[272] = 0;
   out_6112760305448342788[273] = 0;
   out_6112760305448342788[274] = 0;
   out_6112760305448342788[275] = 0;
   out_6112760305448342788[276] = 0;
   out_6112760305448342788[277] = 0;
   out_6112760305448342788[278] = 0;
   out_6112760305448342788[279] = 0;
   out_6112760305448342788[280] = 0;
   out_6112760305448342788[281] = 0;
   out_6112760305448342788[282] = 0;
   out_6112760305448342788[283] = 0;
   out_6112760305448342788[284] = 0;
   out_6112760305448342788[285] = 1.0;
   out_6112760305448342788[286] = 0;
   out_6112760305448342788[287] = 0;
   out_6112760305448342788[288] = 0;
   out_6112760305448342788[289] = 0;
   out_6112760305448342788[290] = 0;
   out_6112760305448342788[291] = 0;
   out_6112760305448342788[292] = 0;
   out_6112760305448342788[293] = 0;
   out_6112760305448342788[294] = 0;
   out_6112760305448342788[295] = 0;
   out_6112760305448342788[296] = 0;
   out_6112760305448342788[297] = 0;
   out_6112760305448342788[298] = 0;
   out_6112760305448342788[299] = 0;
   out_6112760305448342788[300] = 0;
   out_6112760305448342788[301] = 0;
   out_6112760305448342788[302] = 0;
   out_6112760305448342788[303] = 0;
   out_6112760305448342788[304] = 0;
   out_6112760305448342788[305] = 0;
   out_6112760305448342788[306] = 0;
   out_6112760305448342788[307] = 1.0;
   out_6112760305448342788[308] = 0;
   out_6112760305448342788[309] = 0;
   out_6112760305448342788[310] = 0;
   out_6112760305448342788[311] = 0;
   out_6112760305448342788[312] = 0;
   out_6112760305448342788[313] = 0;
   out_6112760305448342788[314] = 0;
   out_6112760305448342788[315] = 0;
   out_6112760305448342788[316] = 0;
   out_6112760305448342788[317] = 0;
   out_6112760305448342788[318] = 0;
   out_6112760305448342788[319] = 0;
   out_6112760305448342788[320] = 0;
   out_6112760305448342788[321] = 0;
   out_6112760305448342788[322] = 0;
   out_6112760305448342788[323] = 0;
   out_6112760305448342788[324] = 0;
   out_6112760305448342788[325] = 0;
   out_6112760305448342788[326] = 0;
   out_6112760305448342788[327] = 0;
   out_6112760305448342788[328] = 0;
   out_6112760305448342788[329] = 1.0;
   out_6112760305448342788[330] = 0;
   out_6112760305448342788[331] = 0;
   out_6112760305448342788[332] = 0;
   out_6112760305448342788[333] = 0;
   out_6112760305448342788[334] = 0;
   out_6112760305448342788[335] = 0;
   out_6112760305448342788[336] = 0;
   out_6112760305448342788[337] = 0;
   out_6112760305448342788[338] = 0;
   out_6112760305448342788[339] = 0;
   out_6112760305448342788[340] = 0;
   out_6112760305448342788[341] = 0;
   out_6112760305448342788[342] = 0;
   out_6112760305448342788[343] = 0;
   out_6112760305448342788[344] = 0;
   out_6112760305448342788[345] = 0;
   out_6112760305448342788[346] = 0;
   out_6112760305448342788[347] = 0;
   out_6112760305448342788[348] = 0;
   out_6112760305448342788[349] = 0;
   out_6112760305448342788[350] = 0;
   out_6112760305448342788[351] = 1.0;
   out_6112760305448342788[352] = 0;
   out_6112760305448342788[353] = 0;
   out_6112760305448342788[354] = 0;
   out_6112760305448342788[355] = 0;
   out_6112760305448342788[356] = 0;
   out_6112760305448342788[357] = 0;
   out_6112760305448342788[358] = 0;
   out_6112760305448342788[359] = 0;
   out_6112760305448342788[360] = 0;
   out_6112760305448342788[361] = 0;
   out_6112760305448342788[362] = 0;
   out_6112760305448342788[363] = 0;
   out_6112760305448342788[364] = 0;
   out_6112760305448342788[365] = 0;
   out_6112760305448342788[366] = 0;
   out_6112760305448342788[367] = 0;
   out_6112760305448342788[368] = 0;
   out_6112760305448342788[369] = 0;
   out_6112760305448342788[370] = 0;
   out_6112760305448342788[371] = 0;
   out_6112760305448342788[372] = 0;
   out_6112760305448342788[373] = 1.0;
   out_6112760305448342788[374] = 0;
   out_6112760305448342788[375] = 0;
   out_6112760305448342788[376] = 0;
   out_6112760305448342788[377] = 0;
   out_6112760305448342788[378] = 0;
   out_6112760305448342788[379] = 0;
   out_6112760305448342788[380] = 0;
   out_6112760305448342788[381] = 0;
   out_6112760305448342788[382] = 0;
   out_6112760305448342788[383] = 0;
   out_6112760305448342788[384] = 0;
   out_6112760305448342788[385] = 0;
   out_6112760305448342788[386] = 0;
   out_6112760305448342788[387] = 0;
   out_6112760305448342788[388] = 0;
   out_6112760305448342788[389] = 0;
   out_6112760305448342788[390] = 0;
   out_6112760305448342788[391] = 0;
   out_6112760305448342788[392] = 0;
   out_6112760305448342788[393] = 0;
   out_6112760305448342788[394] = 0;
   out_6112760305448342788[395] = 1.0;
   out_6112760305448342788[396] = 0;
   out_6112760305448342788[397] = 0;
   out_6112760305448342788[398] = 0;
   out_6112760305448342788[399] = 0;
   out_6112760305448342788[400] = 0;
   out_6112760305448342788[401] = 0;
   out_6112760305448342788[402] = 0;
   out_6112760305448342788[403] = 0;
   out_6112760305448342788[404] = 0;
   out_6112760305448342788[405] = 0;
   out_6112760305448342788[406] = 0;
   out_6112760305448342788[407] = 0;
   out_6112760305448342788[408] = 0;
   out_6112760305448342788[409] = 0;
   out_6112760305448342788[410] = 0;
   out_6112760305448342788[411] = 0;
   out_6112760305448342788[412] = 0;
   out_6112760305448342788[413] = 0;
   out_6112760305448342788[414] = 0;
   out_6112760305448342788[415] = 0;
   out_6112760305448342788[416] = 0;
   out_6112760305448342788[417] = 1.0;
   out_6112760305448342788[418] = 0;
   out_6112760305448342788[419] = 0;
   out_6112760305448342788[420] = 0;
   out_6112760305448342788[421] = 0;
   out_6112760305448342788[422] = 0;
   out_6112760305448342788[423] = 0;
   out_6112760305448342788[424] = 0;
   out_6112760305448342788[425] = 0;
   out_6112760305448342788[426] = 0;
   out_6112760305448342788[427] = 0;
   out_6112760305448342788[428] = 0;
   out_6112760305448342788[429] = 0;
   out_6112760305448342788[430] = 0;
   out_6112760305448342788[431] = 0;
   out_6112760305448342788[432] = 0;
   out_6112760305448342788[433] = 0;
   out_6112760305448342788[434] = 0;
   out_6112760305448342788[435] = 0;
   out_6112760305448342788[436] = 0;
   out_6112760305448342788[437] = 0;
   out_6112760305448342788[438] = 0;
   out_6112760305448342788[439] = 1.0;
   out_6112760305448342788[440] = 0;
   out_6112760305448342788[441] = 0;
   out_6112760305448342788[442] = 0;
   out_6112760305448342788[443] = 0;
   out_6112760305448342788[444] = 0;
   out_6112760305448342788[445] = 0;
   out_6112760305448342788[446] = 0;
   out_6112760305448342788[447] = 0;
   out_6112760305448342788[448] = 0;
   out_6112760305448342788[449] = 0;
   out_6112760305448342788[450] = 0;
   out_6112760305448342788[451] = 0;
   out_6112760305448342788[452] = 0;
   out_6112760305448342788[453] = 0;
   out_6112760305448342788[454] = 0;
   out_6112760305448342788[455] = 0;
   out_6112760305448342788[456] = 0;
   out_6112760305448342788[457] = 0;
   out_6112760305448342788[458] = 0;
   out_6112760305448342788[459] = 0;
   out_6112760305448342788[460] = 0;
   out_6112760305448342788[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5727438172870790233) {
   out_5727438172870790233[0] = dt*state[7] + state[0];
   out_5727438172870790233[1] = dt*state[8] + state[1];
   out_5727438172870790233[2] = dt*state[9] + state[2];
   out_5727438172870790233[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5727438172870790233[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5727438172870790233[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5727438172870790233[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5727438172870790233[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5727438172870790233[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5727438172870790233[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5727438172870790233[10] = state[10];
   out_5727438172870790233[11] = state[11];
   out_5727438172870790233[12] = state[12];
   out_5727438172870790233[13] = state[13];
   out_5727438172870790233[14] = state[14];
   out_5727438172870790233[15] = state[15];
   out_5727438172870790233[16] = state[16];
   out_5727438172870790233[17] = state[17];
   out_5727438172870790233[18] = state[18];
   out_5727438172870790233[19] = state[19];
   out_5727438172870790233[20] = state[20];
   out_5727438172870790233[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7019330850193311240) {
   out_7019330850193311240[0] = 1;
   out_7019330850193311240[1] = 0;
   out_7019330850193311240[2] = 0;
   out_7019330850193311240[3] = 0;
   out_7019330850193311240[4] = 0;
   out_7019330850193311240[5] = 0;
   out_7019330850193311240[6] = dt;
   out_7019330850193311240[7] = 0;
   out_7019330850193311240[8] = 0;
   out_7019330850193311240[9] = 0;
   out_7019330850193311240[10] = 0;
   out_7019330850193311240[11] = 0;
   out_7019330850193311240[12] = 0;
   out_7019330850193311240[13] = 0;
   out_7019330850193311240[14] = 0;
   out_7019330850193311240[15] = 0;
   out_7019330850193311240[16] = 0;
   out_7019330850193311240[17] = 0;
   out_7019330850193311240[18] = 0;
   out_7019330850193311240[19] = 0;
   out_7019330850193311240[20] = 0;
   out_7019330850193311240[21] = 0;
   out_7019330850193311240[22] = 1;
   out_7019330850193311240[23] = 0;
   out_7019330850193311240[24] = 0;
   out_7019330850193311240[25] = 0;
   out_7019330850193311240[26] = 0;
   out_7019330850193311240[27] = 0;
   out_7019330850193311240[28] = dt;
   out_7019330850193311240[29] = 0;
   out_7019330850193311240[30] = 0;
   out_7019330850193311240[31] = 0;
   out_7019330850193311240[32] = 0;
   out_7019330850193311240[33] = 0;
   out_7019330850193311240[34] = 0;
   out_7019330850193311240[35] = 0;
   out_7019330850193311240[36] = 0;
   out_7019330850193311240[37] = 0;
   out_7019330850193311240[38] = 0;
   out_7019330850193311240[39] = 0;
   out_7019330850193311240[40] = 0;
   out_7019330850193311240[41] = 0;
   out_7019330850193311240[42] = 0;
   out_7019330850193311240[43] = 0;
   out_7019330850193311240[44] = 1;
   out_7019330850193311240[45] = 0;
   out_7019330850193311240[46] = 0;
   out_7019330850193311240[47] = 0;
   out_7019330850193311240[48] = 0;
   out_7019330850193311240[49] = 0;
   out_7019330850193311240[50] = dt;
   out_7019330850193311240[51] = 0;
   out_7019330850193311240[52] = 0;
   out_7019330850193311240[53] = 0;
   out_7019330850193311240[54] = 0;
   out_7019330850193311240[55] = 0;
   out_7019330850193311240[56] = 0;
   out_7019330850193311240[57] = 0;
   out_7019330850193311240[58] = 0;
   out_7019330850193311240[59] = 0;
   out_7019330850193311240[60] = 0;
   out_7019330850193311240[61] = 0;
   out_7019330850193311240[62] = 0;
   out_7019330850193311240[63] = 0;
   out_7019330850193311240[64] = 0;
   out_7019330850193311240[65] = 0;
   out_7019330850193311240[66] = 1;
   out_7019330850193311240[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7019330850193311240[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7019330850193311240[69] = 0;
   out_7019330850193311240[70] = 0;
   out_7019330850193311240[71] = 0;
   out_7019330850193311240[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7019330850193311240[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7019330850193311240[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7019330850193311240[75] = 0;
   out_7019330850193311240[76] = 0;
   out_7019330850193311240[77] = 0;
   out_7019330850193311240[78] = 0;
   out_7019330850193311240[79] = 0;
   out_7019330850193311240[80] = 0;
   out_7019330850193311240[81] = 0;
   out_7019330850193311240[82] = 0;
   out_7019330850193311240[83] = 0;
   out_7019330850193311240[84] = 0;
   out_7019330850193311240[85] = 0;
   out_7019330850193311240[86] = 0;
   out_7019330850193311240[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7019330850193311240[88] = 1;
   out_7019330850193311240[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7019330850193311240[90] = 0;
   out_7019330850193311240[91] = 0;
   out_7019330850193311240[92] = 0;
   out_7019330850193311240[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7019330850193311240[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7019330850193311240[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7019330850193311240[96] = 0;
   out_7019330850193311240[97] = 0;
   out_7019330850193311240[98] = 0;
   out_7019330850193311240[99] = 0;
   out_7019330850193311240[100] = 0;
   out_7019330850193311240[101] = 0;
   out_7019330850193311240[102] = 0;
   out_7019330850193311240[103] = 0;
   out_7019330850193311240[104] = 0;
   out_7019330850193311240[105] = 0;
   out_7019330850193311240[106] = 0;
   out_7019330850193311240[107] = 0;
   out_7019330850193311240[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7019330850193311240[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7019330850193311240[110] = 1;
   out_7019330850193311240[111] = 0;
   out_7019330850193311240[112] = 0;
   out_7019330850193311240[113] = 0;
   out_7019330850193311240[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7019330850193311240[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7019330850193311240[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7019330850193311240[117] = 0;
   out_7019330850193311240[118] = 0;
   out_7019330850193311240[119] = 0;
   out_7019330850193311240[120] = 0;
   out_7019330850193311240[121] = 0;
   out_7019330850193311240[122] = 0;
   out_7019330850193311240[123] = 0;
   out_7019330850193311240[124] = 0;
   out_7019330850193311240[125] = 0;
   out_7019330850193311240[126] = 0;
   out_7019330850193311240[127] = 0;
   out_7019330850193311240[128] = 0;
   out_7019330850193311240[129] = 0;
   out_7019330850193311240[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7019330850193311240[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7019330850193311240[132] = 1;
   out_7019330850193311240[133] = 0;
   out_7019330850193311240[134] = 0;
   out_7019330850193311240[135] = 0;
   out_7019330850193311240[136] = 0;
   out_7019330850193311240[137] = 0;
   out_7019330850193311240[138] = 0;
   out_7019330850193311240[139] = 0;
   out_7019330850193311240[140] = 0;
   out_7019330850193311240[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7019330850193311240[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7019330850193311240[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7019330850193311240[144] = 0;
   out_7019330850193311240[145] = 0;
   out_7019330850193311240[146] = 0;
   out_7019330850193311240[147] = 0;
   out_7019330850193311240[148] = 0;
   out_7019330850193311240[149] = 0;
   out_7019330850193311240[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7019330850193311240[151] = 0;
   out_7019330850193311240[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7019330850193311240[153] = 0;
   out_7019330850193311240[154] = 1;
   out_7019330850193311240[155] = 0;
   out_7019330850193311240[156] = 0;
   out_7019330850193311240[157] = 0;
   out_7019330850193311240[158] = 0;
   out_7019330850193311240[159] = 0;
   out_7019330850193311240[160] = 0;
   out_7019330850193311240[161] = 0;
   out_7019330850193311240[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7019330850193311240[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7019330850193311240[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7019330850193311240[165] = 0;
   out_7019330850193311240[166] = 0;
   out_7019330850193311240[167] = 0;
   out_7019330850193311240[168] = 0;
   out_7019330850193311240[169] = 0;
   out_7019330850193311240[170] = 0;
   out_7019330850193311240[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7019330850193311240[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7019330850193311240[173] = 0;
   out_7019330850193311240[174] = 0;
   out_7019330850193311240[175] = 0;
   out_7019330850193311240[176] = 1;
   out_7019330850193311240[177] = 0;
   out_7019330850193311240[178] = 0;
   out_7019330850193311240[179] = 0;
   out_7019330850193311240[180] = 0;
   out_7019330850193311240[181] = 0;
   out_7019330850193311240[182] = 0;
   out_7019330850193311240[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7019330850193311240[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7019330850193311240[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7019330850193311240[186] = 0;
   out_7019330850193311240[187] = 0;
   out_7019330850193311240[188] = 0;
   out_7019330850193311240[189] = 0;
   out_7019330850193311240[190] = 0;
   out_7019330850193311240[191] = 0;
   out_7019330850193311240[192] = 0;
   out_7019330850193311240[193] = 0;
   out_7019330850193311240[194] = 0;
   out_7019330850193311240[195] = 0;
   out_7019330850193311240[196] = 0;
   out_7019330850193311240[197] = 0;
   out_7019330850193311240[198] = 1;
   out_7019330850193311240[199] = 0;
   out_7019330850193311240[200] = 0;
   out_7019330850193311240[201] = 0;
   out_7019330850193311240[202] = 0;
   out_7019330850193311240[203] = 0;
   out_7019330850193311240[204] = 0;
   out_7019330850193311240[205] = 0;
   out_7019330850193311240[206] = 0;
   out_7019330850193311240[207] = 0;
   out_7019330850193311240[208] = 0;
   out_7019330850193311240[209] = 0;
   out_7019330850193311240[210] = 0;
   out_7019330850193311240[211] = 0;
   out_7019330850193311240[212] = 0;
   out_7019330850193311240[213] = 0;
   out_7019330850193311240[214] = 0;
   out_7019330850193311240[215] = 0;
   out_7019330850193311240[216] = 0;
   out_7019330850193311240[217] = 0;
   out_7019330850193311240[218] = 0;
   out_7019330850193311240[219] = 0;
   out_7019330850193311240[220] = 1;
   out_7019330850193311240[221] = 0;
   out_7019330850193311240[222] = 0;
   out_7019330850193311240[223] = 0;
   out_7019330850193311240[224] = 0;
   out_7019330850193311240[225] = 0;
   out_7019330850193311240[226] = 0;
   out_7019330850193311240[227] = 0;
   out_7019330850193311240[228] = 0;
   out_7019330850193311240[229] = 0;
   out_7019330850193311240[230] = 0;
   out_7019330850193311240[231] = 0;
   out_7019330850193311240[232] = 0;
   out_7019330850193311240[233] = 0;
   out_7019330850193311240[234] = 0;
   out_7019330850193311240[235] = 0;
   out_7019330850193311240[236] = 0;
   out_7019330850193311240[237] = 0;
   out_7019330850193311240[238] = 0;
   out_7019330850193311240[239] = 0;
   out_7019330850193311240[240] = 0;
   out_7019330850193311240[241] = 0;
   out_7019330850193311240[242] = 1;
   out_7019330850193311240[243] = 0;
   out_7019330850193311240[244] = 0;
   out_7019330850193311240[245] = 0;
   out_7019330850193311240[246] = 0;
   out_7019330850193311240[247] = 0;
   out_7019330850193311240[248] = 0;
   out_7019330850193311240[249] = 0;
   out_7019330850193311240[250] = 0;
   out_7019330850193311240[251] = 0;
   out_7019330850193311240[252] = 0;
   out_7019330850193311240[253] = 0;
   out_7019330850193311240[254] = 0;
   out_7019330850193311240[255] = 0;
   out_7019330850193311240[256] = 0;
   out_7019330850193311240[257] = 0;
   out_7019330850193311240[258] = 0;
   out_7019330850193311240[259] = 0;
   out_7019330850193311240[260] = 0;
   out_7019330850193311240[261] = 0;
   out_7019330850193311240[262] = 0;
   out_7019330850193311240[263] = 0;
   out_7019330850193311240[264] = 1;
   out_7019330850193311240[265] = 0;
   out_7019330850193311240[266] = 0;
   out_7019330850193311240[267] = 0;
   out_7019330850193311240[268] = 0;
   out_7019330850193311240[269] = 0;
   out_7019330850193311240[270] = 0;
   out_7019330850193311240[271] = 0;
   out_7019330850193311240[272] = 0;
   out_7019330850193311240[273] = 0;
   out_7019330850193311240[274] = 0;
   out_7019330850193311240[275] = 0;
   out_7019330850193311240[276] = 0;
   out_7019330850193311240[277] = 0;
   out_7019330850193311240[278] = 0;
   out_7019330850193311240[279] = 0;
   out_7019330850193311240[280] = 0;
   out_7019330850193311240[281] = 0;
   out_7019330850193311240[282] = 0;
   out_7019330850193311240[283] = 0;
   out_7019330850193311240[284] = 0;
   out_7019330850193311240[285] = 0;
   out_7019330850193311240[286] = 1;
   out_7019330850193311240[287] = 0;
   out_7019330850193311240[288] = 0;
   out_7019330850193311240[289] = 0;
   out_7019330850193311240[290] = 0;
   out_7019330850193311240[291] = 0;
   out_7019330850193311240[292] = 0;
   out_7019330850193311240[293] = 0;
   out_7019330850193311240[294] = 0;
   out_7019330850193311240[295] = 0;
   out_7019330850193311240[296] = 0;
   out_7019330850193311240[297] = 0;
   out_7019330850193311240[298] = 0;
   out_7019330850193311240[299] = 0;
   out_7019330850193311240[300] = 0;
   out_7019330850193311240[301] = 0;
   out_7019330850193311240[302] = 0;
   out_7019330850193311240[303] = 0;
   out_7019330850193311240[304] = 0;
   out_7019330850193311240[305] = 0;
   out_7019330850193311240[306] = 0;
   out_7019330850193311240[307] = 0;
   out_7019330850193311240[308] = 1;
   out_7019330850193311240[309] = 0;
   out_7019330850193311240[310] = 0;
   out_7019330850193311240[311] = 0;
   out_7019330850193311240[312] = 0;
   out_7019330850193311240[313] = 0;
   out_7019330850193311240[314] = 0;
   out_7019330850193311240[315] = 0;
   out_7019330850193311240[316] = 0;
   out_7019330850193311240[317] = 0;
   out_7019330850193311240[318] = 0;
   out_7019330850193311240[319] = 0;
   out_7019330850193311240[320] = 0;
   out_7019330850193311240[321] = 0;
   out_7019330850193311240[322] = 0;
   out_7019330850193311240[323] = 0;
   out_7019330850193311240[324] = 0;
   out_7019330850193311240[325] = 0;
   out_7019330850193311240[326] = 0;
   out_7019330850193311240[327] = 0;
   out_7019330850193311240[328] = 0;
   out_7019330850193311240[329] = 0;
   out_7019330850193311240[330] = 1;
   out_7019330850193311240[331] = 0;
   out_7019330850193311240[332] = 0;
   out_7019330850193311240[333] = 0;
   out_7019330850193311240[334] = 0;
   out_7019330850193311240[335] = 0;
   out_7019330850193311240[336] = 0;
   out_7019330850193311240[337] = 0;
   out_7019330850193311240[338] = 0;
   out_7019330850193311240[339] = 0;
   out_7019330850193311240[340] = 0;
   out_7019330850193311240[341] = 0;
   out_7019330850193311240[342] = 0;
   out_7019330850193311240[343] = 0;
   out_7019330850193311240[344] = 0;
   out_7019330850193311240[345] = 0;
   out_7019330850193311240[346] = 0;
   out_7019330850193311240[347] = 0;
   out_7019330850193311240[348] = 0;
   out_7019330850193311240[349] = 0;
   out_7019330850193311240[350] = 0;
   out_7019330850193311240[351] = 0;
   out_7019330850193311240[352] = 1;
   out_7019330850193311240[353] = 0;
   out_7019330850193311240[354] = 0;
   out_7019330850193311240[355] = 0;
   out_7019330850193311240[356] = 0;
   out_7019330850193311240[357] = 0;
   out_7019330850193311240[358] = 0;
   out_7019330850193311240[359] = 0;
   out_7019330850193311240[360] = 0;
   out_7019330850193311240[361] = 0;
   out_7019330850193311240[362] = 0;
   out_7019330850193311240[363] = 0;
   out_7019330850193311240[364] = 0;
   out_7019330850193311240[365] = 0;
   out_7019330850193311240[366] = 0;
   out_7019330850193311240[367] = 0;
   out_7019330850193311240[368] = 0;
   out_7019330850193311240[369] = 0;
   out_7019330850193311240[370] = 0;
   out_7019330850193311240[371] = 0;
   out_7019330850193311240[372] = 0;
   out_7019330850193311240[373] = 0;
   out_7019330850193311240[374] = 1;
   out_7019330850193311240[375] = 0;
   out_7019330850193311240[376] = 0;
   out_7019330850193311240[377] = 0;
   out_7019330850193311240[378] = 0;
   out_7019330850193311240[379] = 0;
   out_7019330850193311240[380] = 0;
   out_7019330850193311240[381] = 0;
   out_7019330850193311240[382] = 0;
   out_7019330850193311240[383] = 0;
   out_7019330850193311240[384] = 0;
   out_7019330850193311240[385] = 0;
   out_7019330850193311240[386] = 0;
   out_7019330850193311240[387] = 0;
   out_7019330850193311240[388] = 0;
   out_7019330850193311240[389] = 0;
   out_7019330850193311240[390] = 0;
   out_7019330850193311240[391] = 0;
   out_7019330850193311240[392] = 0;
   out_7019330850193311240[393] = 0;
   out_7019330850193311240[394] = 0;
   out_7019330850193311240[395] = 0;
   out_7019330850193311240[396] = 1;
   out_7019330850193311240[397] = 0;
   out_7019330850193311240[398] = 0;
   out_7019330850193311240[399] = 0;
   out_7019330850193311240[400] = 0;
   out_7019330850193311240[401] = 0;
   out_7019330850193311240[402] = 0;
   out_7019330850193311240[403] = 0;
   out_7019330850193311240[404] = 0;
   out_7019330850193311240[405] = 0;
   out_7019330850193311240[406] = 0;
   out_7019330850193311240[407] = 0;
   out_7019330850193311240[408] = 0;
   out_7019330850193311240[409] = 0;
   out_7019330850193311240[410] = 0;
   out_7019330850193311240[411] = 0;
   out_7019330850193311240[412] = 0;
   out_7019330850193311240[413] = 0;
   out_7019330850193311240[414] = 0;
   out_7019330850193311240[415] = 0;
   out_7019330850193311240[416] = 0;
   out_7019330850193311240[417] = 0;
   out_7019330850193311240[418] = 1;
   out_7019330850193311240[419] = 0;
   out_7019330850193311240[420] = 0;
   out_7019330850193311240[421] = 0;
   out_7019330850193311240[422] = 0;
   out_7019330850193311240[423] = 0;
   out_7019330850193311240[424] = 0;
   out_7019330850193311240[425] = 0;
   out_7019330850193311240[426] = 0;
   out_7019330850193311240[427] = 0;
   out_7019330850193311240[428] = 0;
   out_7019330850193311240[429] = 0;
   out_7019330850193311240[430] = 0;
   out_7019330850193311240[431] = 0;
   out_7019330850193311240[432] = 0;
   out_7019330850193311240[433] = 0;
   out_7019330850193311240[434] = 0;
   out_7019330850193311240[435] = 0;
   out_7019330850193311240[436] = 0;
   out_7019330850193311240[437] = 0;
   out_7019330850193311240[438] = 0;
   out_7019330850193311240[439] = 0;
   out_7019330850193311240[440] = 1;
}
void h_4(double *state, double *unused, double *out_6704644497324442738) {
   out_6704644497324442738[0] = state[10] + state[13];
   out_6704644497324442738[1] = state[11] + state[14];
   out_6704644497324442738[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_457666873631447355) {
   out_457666873631447355[0] = 0;
   out_457666873631447355[1] = 0;
   out_457666873631447355[2] = 0;
   out_457666873631447355[3] = 0;
   out_457666873631447355[4] = 0;
   out_457666873631447355[5] = 0;
   out_457666873631447355[6] = 0;
   out_457666873631447355[7] = 0;
   out_457666873631447355[8] = 0;
   out_457666873631447355[9] = 0;
   out_457666873631447355[10] = 1;
   out_457666873631447355[11] = 0;
   out_457666873631447355[12] = 0;
   out_457666873631447355[13] = 1;
   out_457666873631447355[14] = 0;
   out_457666873631447355[15] = 0;
   out_457666873631447355[16] = 0;
   out_457666873631447355[17] = 0;
   out_457666873631447355[18] = 0;
   out_457666873631447355[19] = 0;
   out_457666873631447355[20] = 0;
   out_457666873631447355[21] = 0;
   out_457666873631447355[22] = 0;
   out_457666873631447355[23] = 0;
   out_457666873631447355[24] = 0;
   out_457666873631447355[25] = 0;
   out_457666873631447355[26] = 0;
   out_457666873631447355[27] = 0;
   out_457666873631447355[28] = 0;
   out_457666873631447355[29] = 0;
   out_457666873631447355[30] = 0;
   out_457666873631447355[31] = 0;
   out_457666873631447355[32] = 0;
   out_457666873631447355[33] = 1;
   out_457666873631447355[34] = 0;
   out_457666873631447355[35] = 0;
   out_457666873631447355[36] = 1;
   out_457666873631447355[37] = 0;
   out_457666873631447355[38] = 0;
   out_457666873631447355[39] = 0;
   out_457666873631447355[40] = 0;
   out_457666873631447355[41] = 0;
   out_457666873631447355[42] = 0;
   out_457666873631447355[43] = 0;
   out_457666873631447355[44] = 0;
   out_457666873631447355[45] = 0;
   out_457666873631447355[46] = 0;
   out_457666873631447355[47] = 0;
   out_457666873631447355[48] = 0;
   out_457666873631447355[49] = 0;
   out_457666873631447355[50] = 0;
   out_457666873631447355[51] = 0;
   out_457666873631447355[52] = 0;
   out_457666873631447355[53] = 0;
   out_457666873631447355[54] = 0;
   out_457666873631447355[55] = 0;
   out_457666873631447355[56] = 1;
   out_457666873631447355[57] = 0;
   out_457666873631447355[58] = 0;
   out_457666873631447355[59] = 1;
   out_457666873631447355[60] = 0;
   out_457666873631447355[61] = 0;
   out_457666873631447355[62] = 0;
   out_457666873631447355[63] = 0;
   out_457666873631447355[64] = 0;
   out_457666873631447355[65] = 0;
}
void h_9(double *state, double *unused, double *out_6041008979035423841) {
   out_6041008979035423841[0] = state[10];
   out_6041008979035423841[1] = state[11];
   out_6041008979035423841[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6829552061633000115) {
   out_6829552061633000115[0] = 0;
   out_6829552061633000115[1] = 0;
   out_6829552061633000115[2] = 0;
   out_6829552061633000115[3] = 0;
   out_6829552061633000115[4] = 0;
   out_6829552061633000115[5] = 0;
   out_6829552061633000115[6] = 0;
   out_6829552061633000115[7] = 0;
   out_6829552061633000115[8] = 0;
   out_6829552061633000115[9] = 0;
   out_6829552061633000115[10] = 1;
   out_6829552061633000115[11] = 0;
   out_6829552061633000115[12] = 0;
   out_6829552061633000115[13] = 0;
   out_6829552061633000115[14] = 0;
   out_6829552061633000115[15] = 0;
   out_6829552061633000115[16] = 0;
   out_6829552061633000115[17] = 0;
   out_6829552061633000115[18] = 0;
   out_6829552061633000115[19] = 0;
   out_6829552061633000115[20] = 0;
   out_6829552061633000115[21] = 0;
   out_6829552061633000115[22] = 0;
   out_6829552061633000115[23] = 0;
   out_6829552061633000115[24] = 0;
   out_6829552061633000115[25] = 0;
   out_6829552061633000115[26] = 0;
   out_6829552061633000115[27] = 0;
   out_6829552061633000115[28] = 0;
   out_6829552061633000115[29] = 0;
   out_6829552061633000115[30] = 0;
   out_6829552061633000115[31] = 0;
   out_6829552061633000115[32] = 0;
   out_6829552061633000115[33] = 1;
   out_6829552061633000115[34] = 0;
   out_6829552061633000115[35] = 0;
   out_6829552061633000115[36] = 0;
   out_6829552061633000115[37] = 0;
   out_6829552061633000115[38] = 0;
   out_6829552061633000115[39] = 0;
   out_6829552061633000115[40] = 0;
   out_6829552061633000115[41] = 0;
   out_6829552061633000115[42] = 0;
   out_6829552061633000115[43] = 0;
   out_6829552061633000115[44] = 0;
   out_6829552061633000115[45] = 0;
   out_6829552061633000115[46] = 0;
   out_6829552061633000115[47] = 0;
   out_6829552061633000115[48] = 0;
   out_6829552061633000115[49] = 0;
   out_6829552061633000115[50] = 0;
   out_6829552061633000115[51] = 0;
   out_6829552061633000115[52] = 0;
   out_6829552061633000115[53] = 0;
   out_6829552061633000115[54] = 0;
   out_6829552061633000115[55] = 0;
   out_6829552061633000115[56] = 1;
   out_6829552061633000115[57] = 0;
   out_6829552061633000115[58] = 0;
   out_6829552061633000115[59] = 0;
   out_6829552061633000115[60] = 0;
   out_6829552061633000115[61] = 0;
   out_6829552061633000115[62] = 0;
   out_6829552061633000115[63] = 0;
   out_6829552061633000115[64] = 0;
   out_6829552061633000115[65] = 0;
}
void h_10(double *state, double *unused, double *out_510443638577489006) {
   out_510443638577489006[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_510443638577489006[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_510443638577489006[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2575019310555904300) {
   out_2575019310555904300[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2575019310555904300[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2575019310555904300[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2575019310555904300[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2575019310555904300[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2575019310555904300[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2575019310555904300[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2575019310555904300[7] = 0;
   out_2575019310555904300[8] = 0;
   out_2575019310555904300[9] = 0;
   out_2575019310555904300[10] = 0;
   out_2575019310555904300[11] = 0;
   out_2575019310555904300[12] = 0;
   out_2575019310555904300[13] = 0;
   out_2575019310555904300[14] = 0;
   out_2575019310555904300[15] = 0;
   out_2575019310555904300[16] = 1;
   out_2575019310555904300[17] = 0;
   out_2575019310555904300[18] = 0;
   out_2575019310555904300[19] = 1;
   out_2575019310555904300[20] = 0;
   out_2575019310555904300[21] = 0;
   out_2575019310555904300[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2575019310555904300[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2575019310555904300[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2575019310555904300[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2575019310555904300[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2575019310555904300[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2575019310555904300[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2575019310555904300[29] = 0;
   out_2575019310555904300[30] = 0;
   out_2575019310555904300[31] = 0;
   out_2575019310555904300[32] = 0;
   out_2575019310555904300[33] = 0;
   out_2575019310555904300[34] = 0;
   out_2575019310555904300[35] = 0;
   out_2575019310555904300[36] = 0;
   out_2575019310555904300[37] = 0;
   out_2575019310555904300[38] = 0;
   out_2575019310555904300[39] = 1;
   out_2575019310555904300[40] = 0;
   out_2575019310555904300[41] = 0;
   out_2575019310555904300[42] = 1;
   out_2575019310555904300[43] = 0;
   out_2575019310555904300[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2575019310555904300[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2575019310555904300[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2575019310555904300[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2575019310555904300[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2575019310555904300[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2575019310555904300[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2575019310555904300[51] = 0;
   out_2575019310555904300[52] = 0;
   out_2575019310555904300[53] = 0;
   out_2575019310555904300[54] = 0;
   out_2575019310555904300[55] = 0;
   out_2575019310555904300[56] = 0;
   out_2575019310555904300[57] = 0;
   out_2575019310555904300[58] = 0;
   out_2575019310555904300[59] = 0;
   out_2575019310555904300[60] = 0;
   out_2575019310555904300[61] = 0;
   out_2575019310555904300[62] = 1;
   out_2575019310555904300[63] = 0;
   out_2575019310555904300[64] = 0;
   out_2575019310555904300[65] = 1;
}
void h_12(double *state, double *unused, double *out_724301251006094885) {
   out_724301251006094885[0] = state[0];
   out_724301251006094885[1] = state[1];
   out_724301251006094885[2] = state[2];
}
void H_12(double *state, double *unused, double *out_163432151416146312) {
   out_163432151416146312[0] = 1;
   out_163432151416146312[1] = 0;
   out_163432151416146312[2] = 0;
   out_163432151416146312[3] = 0;
   out_163432151416146312[4] = 0;
   out_163432151416146312[5] = 0;
   out_163432151416146312[6] = 0;
   out_163432151416146312[7] = 0;
   out_163432151416146312[8] = 0;
   out_163432151416146312[9] = 0;
   out_163432151416146312[10] = 0;
   out_163432151416146312[11] = 0;
   out_163432151416146312[12] = 0;
   out_163432151416146312[13] = 0;
   out_163432151416146312[14] = 0;
   out_163432151416146312[15] = 0;
   out_163432151416146312[16] = 0;
   out_163432151416146312[17] = 0;
   out_163432151416146312[18] = 0;
   out_163432151416146312[19] = 0;
   out_163432151416146312[20] = 0;
   out_163432151416146312[21] = 0;
   out_163432151416146312[22] = 0;
   out_163432151416146312[23] = 1;
   out_163432151416146312[24] = 0;
   out_163432151416146312[25] = 0;
   out_163432151416146312[26] = 0;
   out_163432151416146312[27] = 0;
   out_163432151416146312[28] = 0;
   out_163432151416146312[29] = 0;
   out_163432151416146312[30] = 0;
   out_163432151416146312[31] = 0;
   out_163432151416146312[32] = 0;
   out_163432151416146312[33] = 0;
   out_163432151416146312[34] = 0;
   out_163432151416146312[35] = 0;
   out_163432151416146312[36] = 0;
   out_163432151416146312[37] = 0;
   out_163432151416146312[38] = 0;
   out_163432151416146312[39] = 0;
   out_163432151416146312[40] = 0;
   out_163432151416146312[41] = 0;
   out_163432151416146312[42] = 0;
   out_163432151416146312[43] = 0;
   out_163432151416146312[44] = 0;
   out_163432151416146312[45] = 0;
   out_163432151416146312[46] = 1;
   out_163432151416146312[47] = 0;
   out_163432151416146312[48] = 0;
   out_163432151416146312[49] = 0;
   out_163432151416146312[50] = 0;
   out_163432151416146312[51] = 0;
   out_163432151416146312[52] = 0;
   out_163432151416146312[53] = 0;
   out_163432151416146312[54] = 0;
   out_163432151416146312[55] = 0;
   out_163432151416146312[56] = 0;
   out_163432151416146312[57] = 0;
   out_163432151416146312[58] = 0;
   out_163432151416146312[59] = 0;
   out_163432151416146312[60] = 0;
   out_163432151416146312[61] = 0;
   out_163432151416146312[62] = 0;
   out_163432151416146312[63] = 0;
   out_163432151416146312[64] = 0;
   out_163432151416146312[65] = 0;
}
void h_35(double *state, double *unused, double *out_1094377590467689528) {
   out_1094377590467689528[0] = state[7];
   out_1094377590467689528[1] = state[8];
   out_1094377590467689528[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2908995183741160021) {
   out_2908995183741160021[0] = 0;
   out_2908995183741160021[1] = 0;
   out_2908995183741160021[2] = 0;
   out_2908995183741160021[3] = 0;
   out_2908995183741160021[4] = 0;
   out_2908995183741160021[5] = 0;
   out_2908995183741160021[6] = 0;
   out_2908995183741160021[7] = 1;
   out_2908995183741160021[8] = 0;
   out_2908995183741160021[9] = 0;
   out_2908995183741160021[10] = 0;
   out_2908995183741160021[11] = 0;
   out_2908995183741160021[12] = 0;
   out_2908995183741160021[13] = 0;
   out_2908995183741160021[14] = 0;
   out_2908995183741160021[15] = 0;
   out_2908995183741160021[16] = 0;
   out_2908995183741160021[17] = 0;
   out_2908995183741160021[18] = 0;
   out_2908995183741160021[19] = 0;
   out_2908995183741160021[20] = 0;
   out_2908995183741160021[21] = 0;
   out_2908995183741160021[22] = 0;
   out_2908995183741160021[23] = 0;
   out_2908995183741160021[24] = 0;
   out_2908995183741160021[25] = 0;
   out_2908995183741160021[26] = 0;
   out_2908995183741160021[27] = 0;
   out_2908995183741160021[28] = 0;
   out_2908995183741160021[29] = 0;
   out_2908995183741160021[30] = 1;
   out_2908995183741160021[31] = 0;
   out_2908995183741160021[32] = 0;
   out_2908995183741160021[33] = 0;
   out_2908995183741160021[34] = 0;
   out_2908995183741160021[35] = 0;
   out_2908995183741160021[36] = 0;
   out_2908995183741160021[37] = 0;
   out_2908995183741160021[38] = 0;
   out_2908995183741160021[39] = 0;
   out_2908995183741160021[40] = 0;
   out_2908995183741160021[41] = 0;
   out_2908995183741160021[42] = 0;
   out_2908995183741160021[43] = 0;
   out_2908995183741160021[44] = 0;
   out_2908995183741160021[45] = 0;
   out_2908995183741160021[46] = 0;
   out_2908995183741160021[47] = 0;
   out_2908995183741160021[48] = 0;
   out_2908995183741160021[49] = 0;
   out_2908995183741160021[50] = 0;
   out_2908995183741160021[51] = 0;
   out_2908995183741160021[52] = 0;
   out_2908995183741160021[53] = 1;
   out_2908995183741160021[54] = 0;
   out_2908995183741160021[55] = 0;
   out_2908995183741160021[56] = 0;
   out_2908995183741160021[57] = 0;
   out_2908995183741160021[58] = 0;
   out_2908995183741160021[59] = 0;
   out_2908995183741160021[60] = 0;
   out_2908995183741160021[61] = 0;
   out_2908995183741160021[62] = 0;
   out_2908995183741160021[63] = 0;
   out_2908995183741160021[64] = 0;
   out_2908995183741160021[65] = 0;
}
void h_32(double *state, double *unused, double *out_1396309647877035484) {
   out_1396309647877035484[0] = state[3];
   out_1396309647877035484[1] = state[4];
   out_1396309647877035484[2] = state[5];
   out_1396309647877035484[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3040159968681900490) {
   out_3040159968681900490[0] = 0;
   out_3040159968681900490[1] = 0;
   out_3040159968681900490[2] = 0;
   out_3040159968681900490[3] = 1;
   out_3040159968681900490[4] = 0;
   out_3040159968681900490[5] = 0;
   out_3040159968681900490[6] = 0;
   out_3040159968681900490[7] = 0;
   out_3040159968681900490[8] = 0;
   out_3040159968681900490[9] = 0;
   out_3040159968681900490[10] = 0;
   out_3040159968681900490[11] = 0;
   out_3040159968681900490[12] = 0;
   out_3040159968681900490[13] = 0;
   out_3040159968681900490[14] = 0;
   out_3040159968681900490[15] = 0;
   out_3040159968681900490[16] = 0;
   out_3040159968681900490[17] = 0;
   out_3040159968681900490[18] = 0;
   out_3040159968681900490[19] = 0;
   out_3040159968681900490[20] = 0;
   out_3040159968681900490[21] = 0;
   out_3040159968681900490[22] = 0;
   out_3040159968681900490[23] = 0;
   out_3040159968681900490[24] = 0;
   out_3040159968681900490[25] = 0;
   out_3040159968681900490[26] = 1;
   out_3040159968681900490[27] = 0;
   out_3040159968681900490[28] = 0;
   out_3040159968681900490[29] = 0;
   out_3040159968681900490[30] = 0;
   out_3040159968681900490[31] = 0;
   out_3040159968681900490[32] = 0;
   out_3040159968681900490[33] = 0;
   out_3040159968681900490[34] = 0;
   out_3040159968681900490[35] = 0;
   out_3040159968681900490[36] = 0;
   out_3040159968681900490[37] = 0;
   out_3040159968681900490[38] = 0;
   out_3040159968681900490[39] = 0;
   out_3040159968681900490[40] = 0;
   out_3040159968681900490[41] = 0;
   out_3040159968681900490[42] = 0;
   out_3040159968681900490[43] = 0;
   out_3040159968681900490[44] = 0;
   out_3040159968681900490[45] = 0;
   out_3040159968681900490[46] = 0;
   out_3040159968681900490[47] = 0;
   out_3040159968681900490[48] = 0;
   out_3040159968681900490[49] = 1;
   out_3040159968681900490[50] = 0;
   out_3040159968681900490[51] = 0;
   out_3040159968681900490[52] = 0;
   out_3040159968681900490[53] = 0;
   out_3040159968681900490[54] = 0;
   out_3040159968681900490[55] = 0;
   out_3040159968681900490[56] = 0;
   out_3040159968681900490[57] = 0;
   out_3040159968681900490[58] = 0;
   out_3040159968681900490[59] = 0;
   out_3040159968681900490[60] = 0;
   out_3040159968681900490[61] = 0;
   out_3040159968681900490[62] = 0;
   out_3040159968681900490[63] = 0;
   out_3040159968681900490[64] = 0;
   out_3040159968681900490[65] = 0;
   out_3040159968681900490[66] = 0;
   out_3040159968681900490[67] = 0;
   out_3040159968681900490[68] = 0;
   out_3040159968681900490[69] = 0;
   out_3040159968681900490[70] = 0;
   out_3040159968681900490[71] = 0;
   out_3040159968681900490[72] = 1;
   out_3040159968681900490[73] = 0;
   out_3040159968681900490[74] = 0;
   out_3040159968681900490[75] = 0;
   out_3040159968681900490[76] = 0;
   out_3040159968681900490[77] = 0;
   out_3040159968681900490[78] = 0;
   out_3040159968681900490[79] = 0;
   out_3040159968681900490[80] = 0;
   out_3040159968681900490[81] = 0;
   out_3040159968681900490[82] = 0;
   out_3040159968681900490[83] = 0;
   out_3040159968681900490[84] = 0;
   out_3040159968681900490[85] = 0;
   out_3040159968681900490[86] = 0;
   out_3040159968681900490[87] = 0;
}
void h_13(double *state, double *unused, double *out_279510485795163836) {
   out_279510485795163836[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_279510485795163836[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_279510485795163836[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8153037128550556083) {
   out_8153037128550556083[0] = 0;
   out_8153037128550556083[1] = 0;
   out_8153037128550556083[2] = 0;
   out_8153037128550556083[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8153037128550556083[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8153037128550556083[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8153037128550556083[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8153037128550556083[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8153037128550556083[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8153037128550556083[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8153037128550556083[10] = 0;
   out_8153037128550556083[11] = 0;
   out_8153037128550556083[12] = 0;
   out_8153037128550556083[13] = 0;
   out_8153037128550556083[14] = 0;
   out_8153037128550556083[15] = 0;
   out_8153037128550556083[16] = 0;
   out_8153037128550556083[17] = 0;
   out_8153037128550556083[18] = 0;
   out_8153037128550556083[19] = 0;
   out_8153037128550556083[20] = 0;
   out_8153037128550556083[21] = 0;
   out_8153037128550556083[22] = 0;
   out_8153037128550556083[23] = 0;
   out_8153037128550556083[24] = 0;
   out_8153037128550556083[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8153037128550556083[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8153037128550556083[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8153037128550556083[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8153037128550556083[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8153037128550556083[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8153037128550556083[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8153037128550556083[32] = 0;
   out_8153037128550556083[33] = 0;
   out_8153037128550556083[34] = 0;
   out_8153037128550556083[35] = 0;
   out_8153037128550556083[36] = 0;
   out_8153037128550556083[37] = 0;
   out_8153037128550556083[38] = 0;
   out_8153037128550556083[39] = 0;
   out_8153037128550556083[40] = 0;
   out_8153037128550556083[41] = 0;
   out_8153037128550556083[42] = 0;
   out_8153037128550556083[43] = 0;
   out_8153037128550556083[44] = 0;
   out_8153037128550556083[45] = 0;
   out_8153037128550556083[46] = 0;
   out_8153037128550556083[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8153037128550556083[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8153037128550556083[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8153037128550556083[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8153037128550556083[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8153037128550556083[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8153037128550556083[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8153037128550556083[54] = 0;
   out_8153037128550556083[55] = 0;
   out_8153037128550556083[56] = 0;
   out_8153037128550556083[57] = 0;
   out_8153037128550556083[58] = 0;
   out_8153037128550556083[59] = 0;
   out_8153037128550556083[60] = 0;
   out_8153037128550556083[61] = 0;
   out_8153037128550556083[62] = 0;
   out_8153037128550556083[63] = 0;
   out_8153037128550556083[64] = 0;
   out_8153037128550556083[65] = 0;
}
void h_14(double *state, double *unused, double *out_6041008979035423841) {
   out_6041008979035423841[0] = state[10];
   out_6041008979035423841[1] = state[11];
   out_6041008979035423841[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6829552061633000115) {
   out_6829552061633000115[0] = 0;
   out_6829552061633000115[1] = 0;
   out_6829552061633000115[2] = 0;
   out_6829552061633000115[3] = 0;
   out_6829552061633000115[4] = 0;
   out_6829552061633000115[5] = 0;
   out_6829552061633000115[6] = 0;
   out_6829552061633000115[7] = 0;
   out_6829552061633000115[8] = 0;
   out_6829552061633000115[9] = 0;
   out_6829552061633000115[10] = 1;
   out_6829552061633000115[11] = 0;
   out_6829552061633000115[12] = 0;
   out_6829552061633000115[13] = 0;
   out_6829552061633000115[14] = 0;
   out_6829552061633000115[15] = 0;
   out_6829552061633000115[16] = 0;
   out_6829552061633000115[17] = 0;
   out_6829552061633000115[18] = 0;
   out_6829552061633000115[19] = 0;
   out_6829552061633000115[20] = 0;
   out_6829552061633000115[21] = 0;
   out_6829552061633000115[22] = 0;
   out_6829552061633000115[23] = 0;
   out_6829552061633000115[24] = 0;
   out_6829552061633000115[25] = 0;
   out_6829552061633000115[26] = 0;
   out_6829552061633000115[27] = 0;
   out_6829552061633000115[28] = 0;
   out_6829552061633000115[29] = 0;
   out_6829552061633000115[30] = 0;
   out_6829552061633000115[31] = 0;
   out_6829552061633000115[32] = 0;
   out_6829552061633000115[33] = 1;
   out_6829552061633000115[34] = 0;
   out_6829552061633000115[35] = 0;
   out_6829552061633000115[36] = 0;
   out_6829552061633000115[37] = 0;
   out_6829552061633000115[38] = 0;
   out_6829552061633000115[39] = 0;
   out_6829552061633000115[40] = 0;
   out_6829552061633000115[41] = 0;
   out_6829552061633000115[42] = 0;
   out_6829552061633000115[43] = 0;
   out_6829552061633000115[44] = 0;
   out_6829552061633000115[45] = 0;
   out_6829552061633000115[46] = 0;
   out_6829552061633000115[47] = 0;
   out_6829552061633000115[48] = 0;
   out_6829552061633000115[49] = 0;
   out_6829552061633000115[50] = 0;
   out_6829552061633000115[51] = 0;
   out_6829552061633000115[52] = 0;
   out_6829552061633000115[53] = 0;
   out_6829552061633000115[54] = 0;
   out_6829552061633000115[55] = 0;
   out_6829552061633000115[56] = 1;
   out_6829552061633000115[57] = 0;
   out_6829552061633000115[58] = 0;
   out_6829552061633000115[59] = 0;
   out_6829552061633000115[60] = 0;
   out_6829552061633000115[61] = 0;
   out_6829552061633000115[62] = 0;
   out_6829552061633000115[63] = 0;
   out_6829552061633000115[64] = 0;
   out_6829552061633000115[65] = 0;
}
void h_33(double *state, double *unused, double *out_721462086167171751) {
   out_721462086167171751[0] = state[16];
   out_721462086167171751[1] = state[17];
   out_721462086167171751[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6059552188380017625) {
   out_6059552188380017625[0] = 0;
   out_6059552188380017625[1] = 0;
   out_6059552188380017625[2] = 0;
   out_6059552188380017625[3] = 0;
   out_6059552188380017625[4] = 0;
   out_6059552188380017625[5] = 0;
   out_6059552188380017625[6] = 0;
   out_6059552188380017625[7] = 0;
   out_6059552188380017625[8] = 0;
   out_6059552188380017625[9] = 0;
   out_6059552188380017625[10] = 0;
   out_6059552188380017625[11] = 0;
   out_6059552188380017625[12] = 0;
   out_6059552188380017625[13] = 0;
   out_6059552188380017625[14] = 0;
   out_6059552188380017625[15] = 0;
   out_6059552188380017625[16] = 1;
   out_6059552188380017625[17] = 0;
   out_6059552188380017625[18] = 0;
   out_6059552188380017625[19] = 0;
   out_6059552188380017625[20] = 0;
   out_6059552188380017625[21] = 0;
   out_6059552188380017625[22] = 0;
   out_6059552188380017625[23] = 0;
   out_6059552188380017625[24] = 0;
   out_6059552188380017625[25] = 0;
   out_6059552188380017625[26] = 0;
   out_6059552188380017625[27] = 0;
   out_6059552188380017625[28] = 0;
   out_6059552188380017625[29] = 0;
   out_6059552188380017625[30] = 0;
   out_6059552188380017625[31] = 0;
   out_6059552188380017625[32] = 0;
   out_6059552188380017625[33] = 0;
   out_6059552188380017625[34] = 0;
   out_6059552188380017625[35] = 0;
   out_6059552188380017625[36] = 0;
   out_6059552188380017625[37] = 0;
   out_6059552188380017625[38] = 0;
   out_6059552188380017625[39] = 1;
   out_6059552188380017625[40] = 0;
   out_6059552188380017625[41] = 0;
   out_6059552188380017625[42] = 0;
   out_6059552188380017625[43] = 0;
   out_6059552188380017625[44] = 0;
   out_6059552188380017625[45] = 0;
   out_6059552188380017625[46] = 0;
   out_6059552188380017625[47] = 0;
   out_6059552188380017625[48] = 0;
   out_6059552188380017625[49] = 0;
   out_6059552188380017625[50] = 0;
   out_6059552188380017625[51] = 0;
   out_6059552188380017625[52] = 0;
   out_6059552188380017625[53] = 0;
   out_6059552188380017625[54] = 0;
   out_6059552188380017625[55] = 0;
   out_6059552188380017625[56] = 0;
   out_6059552188380017625[57] = 0;
   out_6059552188380017625[58] = 0;
   out_6059552188380017625[59] = 0;
   out_6059552188380017625[60] = 0;
   out_6059552188380017625[61] = 0;
   out_6059552188380017625[62] = 1;
   out_6059552188380017625[63] = 0;
   out_6059552188380017625[64] = 0;
   out_6059552188380017625[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1654711282601658745) {
  H(in_vec, out_1654711282601658745);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5734741546333750642) {
  err_fun(nom_x, delta_x, out_5734741546333750642);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_997272261207104900) {
  inv_err_fun(nom_x, true_x, out_997272261207104900);
}
void live_H_mod_fun(double *state, double *out_6112760305448342788) {
  H_mod_fun(state, out_6112760305448342788);
}
void live_f_fun(double *state, double dt, double *out_5727438172870790233) {
  f_fun(state,  dt, out_5727438172870790233);
}
void live_F_fun(double *state, double dt, double *out_7019330850193311240) {
  F_fun(state,  dt, out_7019330850193311240);
}
void live_h_4(double *state, double *unused, double *out_6704644497324442738) {
  h_4(state, unused, out_6704644497324442738);
}
void live_H_4(double *state, double *unused, double *out_457666873631447355) {
  H_4(state, unused, out_457666873631447355);
}
void live_h_9(double *state, double *unused, double *out_6041008979035423841) {
  h_9(state, unused, out_6041008979035423841);
}
void live_H_9(double *state, double *unused, double *out_6829552061633000115) {
  H_9(state, unused, out_6829552061633000115);
}
void live_h_10(double *state, double *unused, double *out_510443638577489006) {
  h_10(state, unused, out_510443638577489006);
}
void live_H_10(double *state, double *unused, double *out_2575019310555904300) {
  H_10(state, unused, out_2575019310555904300);
}
void live_h_12(double *state, double *unused, double *out_724301251006094885) {
  h_12(state, unused, out_724301251006094885);
}
void live_H_12(double *state, double *unused, double *out_163432151416146312) {
  H_12(state, unused, out_163432151416146312);
}
void live_h_35(double *state, double *unused, double *out_1094377590467689528) {
  h_35(state, unused, out_1094377590467689528);
}
void live_H_35(double *state, double *unused, double *out_2908995183741160021) {
  H_35(state, unused, out_2908995183741160021);
}
void live_h_32(double *state, double *unused, double *out_1396309647877035484) {
  h_32(state, unused, out_1396309647877035484);
}
void live_H_32(double *state, double *unused, double *out_3040159968681900490) {
  H_32(state, unused, out_3040159968681900490);
}
void live_h_13(double *state, double *unused, double *out_279510485795163836) {
  h_13(state, unused, out_279510485795163836);
}
void live_H_13(double *state, double *unused, double *out_8153037128550556083) {
  H_13(state, unused, out_8153037128550556083);
}
void live_h_14(double *state, double *unused, double *out_6041008979035423841) {
  h_14(state, unused, out_6041008979035423841);
}
void live_H_14(double *state, double *unused, double *out_6829552061633000115) {
  H_14(state, unused, out_6829552061633000115);
}
void live_h_33(double *state, double *unused, double *out_721462086167171751) {
  h_33(state, unused, out_721462086167171751);
}
void live_H_33(double *state, double *unused, double *out_6059552188380017625) {
  H_33(state, unused, out_6059552188380017625);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
